#include <bits/stdc++.h>
using namespace std;

int max(int a, int b)
{
    return (a > b) ? a : b;
}

int knapSack(int capacity, int weight[], int value[], int size)
{
    vector<vector<int>> K(size + 1, vector<int>(capacity + 1));

    for (int i = 0; i <= size; i++)
    {
        for (int c = 0; c <= capacity; c++)
        {
            if (i == 0 || c == 0)
                K[i][c] = 0;
            else if (weight[i - 1] <= c)
                K[i][c] = max(value[i - 1] +
                                  K[i - 1][c - weight[i - 1]],
                              K[i - 1][c]);
            else
                K[i][c] = K[i - 1][c];
        }
    }
    return K[size][capacity];
}

int main()
{
    int value[] = {60, 100, 120};
    int weight[] = {10, 20, 30};
    int capacity = 50;
    int size = sizeof(value) / sizeof(value[0]);

    cout << knapSack(capacity, weight, value, size);

    return 0;
}
