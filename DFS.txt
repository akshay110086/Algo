#include <bits/stdc++.h>
using namespace std;

void dfs(int node, bool visited[], vector<int> adj[])
{
    // preorder
    visited[node] = true;
    cout << node << " ";

    // inorder
    vector<int>::iterator it;

    for (it = adj[node].begin(); it != adj[node].end(); it++)
    {
        if (!visited[*it])
            dfs(*it, visited, adj);
    }

    // postorder
    // cout << node << " ";
}

int main()
{
    const int N = 500;
    vector<int> adj[N];
    bool visited[N];
    for (int i = 0; i < N; i++)
        visited[i] = false;

    cout << "Enter no. of nodes & no. of edges : ";
    int nodes, edges;
    cin >> nodes >> edges;

    cout << "Enter Both values of each edges :\n";
    for (int i = 0; i < edges; i++)
    {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }

    cout << "DFS result will be : ";
    dfs(1, visited, adj);
    return 0;
}