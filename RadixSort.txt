#include <iostream>
using namespace std;

int getMax(int arr[], int n)
{
    int max = arr[0];
    int i;
    for (i = 1; i < n; i++)
        if (arr[i] > max)
            max = arr[i];
    return max;
}

void countSort(int arr[], int n, int exp)
{
    int output[n]; // output array
    int i, count[10] = {0};

    // Store count of occurrences in count[]
    for (i = 0; i < n; i++)
        count[(arr[i] / exp) % 10]++;

    for (i = 1; i < 10; i++)
        count[i] += count[i - 1];

    // Build the output array
    for (i = n - 1; i >= 0; i--)
    {
        output[count[(arr[i] / exp) % 10] - 1] = arr[i];
        count[(arr[i] / exp) % 10]--;
    }

    for (i = 0; i < n; i++)
        arr[i] = output[i];
}

void radixsort(int arr[], int n)
{
    int m = getMax(arr, n);

    int exp;
    for (exp = 1; m / exp > 0; exp *= 10)
        countSort(arr, n, exp);
}

void print(int arr[], int n)
{
    int i;
    for (i = 0; i < n; i++)
        cout << arr[i] << " ";
}

// Main Function (Driver Code)
int main()
{
    int arr[] = {1701, 4593, 7235, 9090, 8302, 24, 2, 66};
    int n = sizeof(arr) / sizeof(arr[0]);
    cout << "Given Array : [ ";
    print(arr, n);

    radixsort(arr, n);
    cout << "]\nArray After using Radix Sort : [ ";
    print(arr, n);
    cout << "]\n";

    return 0;
}

// OUTPUT:-
// Given Array : [1701 4593 7235 9090 8302 24 2 66]
// Array After using Radix Sort : [2 24 66 1701 4593 7235 8302 9090]